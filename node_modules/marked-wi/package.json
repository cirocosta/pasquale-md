{
  "name": "marked-wi",
  "description": "A markdown parser built for speed",
  "version": "0.3.3",
  "main": "./lib/marked.js",
  "preferGlobal": true,
  "license": "MIT",
  "keywords": [
    "markdown",
    "markup"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/cirocosta/marked-wi.git"
  },
  "author": "",
  "bugs": {
    "url": "https://github.com/cirocosta/marked-wi/issues"
  },
  "homepage": "https://github.com/cirocosta/marked-wi",
  "readme": "# marked-wi\n\n> A full-featured markdown parser and compiler, written in JavaScript. Built\n> for speed.\n\nThis fork of [marked](https://github.com/chjj/marked) is a slower version of the originial as it exposes the inline code stuff to the lexer.\n\n## Install\n\n``` bash\nnpm install marked-w-inline --save\n```\n\n## Usage\n\n```javascript\nvar marked = require('../')\n  , fs = require('fs')\n  , path = require('path')\n  , Lexer = marked.Lexer\n  , Parser = marked.Parser;\n\nfs.readFile(path.resolve(__dirname, 'md.md'),\n            {encoding: 'utf8'},\n            function (err, data) {\n\n  if (err) throw err;\n\n  console.log(\n    JSON.stringify(\n      Parser.parse(\n        Lexer.lex(data)), undefined, 2));\n});\n```\n`Parser.parse()` returns an object just like `Lexer.lex()` but with the inline stuff that it found with the `InlineLexer` (notice that the `Parser` in the [original marked](https://github.com/chjj/marked) would return the rendered text, which is completly different from what we are doing here).\n",
  "readmeFilename": "README.md",
  "gitHead": "b37d4843ff29d4e25544209967c61f936058de3d",
  "_id": "marked-wi@0.3.3",
  "scripts": {},
  "_shasum": "159838681378992a19c70c64f40acc2df5021bc4",
  "_from": "marked-wi@"
}
